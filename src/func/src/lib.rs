extern crate gr;
use gr::*;

#[no_mangle]
pub extern "C"
fn gelpia_func(_x: &Vec<GI>, _c: &Vec<GI>) -> GI {
    (sqrt(pow((((((((((((((((((((((((((sqrt(pow(_x[0], 2))) * powi(_x[1], _c[0])) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[3] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[3] * powi(_x[0], _c[0]))) + _c[4]), 2)))) - (((_c[2] * (sqrt(pow(_x[0], 2)))) * _x[1]) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[3] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[3] * powi(_x[0], _c[0]))) + _c[4]), 2))))) + ((sqrt(pow(_x[0], 2))) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[3] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[3] * powi(_x[0], _c[0]))) + _c[4]), 2))))) + (((sqrt(pow(_x[0], 2))) * powi(_x[1], _c[0])) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[5] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[5] * powi(_x[0], _c[0]))) + _c[4]), 2))))) - (((_c[2] * (sqrt(pow(_x[0], 2)))) * _x[1]) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[5] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[5] * powi(_x[0], _c[0]))) + _c[4]), 2))))) + ((sqrt(pow(_x[0], 2))) * (sqrt(pow((((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (((_c[5] * powi(_x[0], _c[0])) - _c[4]) * _x[1])) - (_c[5] * powi(_x[0], _c[0]))) + _c[4]), 2))))) + ((_c[6] * powi(_x[1], _c[0])) * (sqrt(pow(((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (_c[4] * _x[1])) - _c[4]), 2))))) - ((_c[4] * _x[1]) * (sqrt(pow(((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (_c[4] * _x[1])) - _c[4]), 2))))) + (_c[6] * (sqrt(pow(((((((_c[2] * powi(_x[0], _c[1])) * _x[1]) + powi(_x[0], _c[1])) * powi(_x[2], _c[0])) + (_c[4] * _x[1])) - _c[4]), 2))))) + ((((powi(_x[0], _c[1]) * (sqrt(pow(_x[0], 2)))) * powi(_x[1], _c[0])) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * (sqrt(pow(_x[2], 2))))) - (((((_c[2] * powi(_x[0], _c[1])) * (sqrt(pow(_x[0], 2)))) * _x[1]) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * (sqrt(pow(_x[2], 2))))) + (((powi(_x[0], _c[1]) * (sqrt(pow(_x[0], 2)))) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * (sqrt(pow(_x[2], 2))))) + (((((_c[8] * powi(_x[0], _c[1])) * (sqrt(pow(_x[0], 2)))) * powi(_x[1], _c[0])) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * powi(_x[2], _c[0]))) - (((((_c[9] * powi(_x[0], _c[1])) * (sqrt(pow(_x[0], 2)))) * _x[1]) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * powi(_x[2], _c[0]))) + ((((_c[8] * powi(_x[0], _c[1])) * (sqrt(pow(_x[0], 2)))) * (sqrt(pow(((_c[2] * _x[1]) + _c[7]), 2)))) * powi(_x[2], _c[0]))) + ((((_c[10] * powi(_x[0], _c[1])) * (sqrt(pow(_x[0], 2)))) * (sqrt(pow((_x[1] - _c[7]), 2)))) * powi(_x[2], _c[0]))) + ((((_c[6] * (sqrt(pow(_x[0], 2)))) * (sqrt(pow(((_c[11] * powi(_x[0], _c[0])) - _c[2]), 2)))) * powi(_x[1], _c[0])) * (sqrt(pow((_x[1] - _c[7]), 2))))) + (((_c[12] * (sqrt(pow(_x[0], 2)))) * powi(_x[1], _c[0])) * (sqrt(pow((_x[1] - _c[7]), 2))))) - ((((_c[4] * (sqrt(pow(_x[0], 2)))) * (sqrt(pow(((_c[11] * powi(_x[0], _c[0])) - _c[2]), 2)))) * _x[1]) * (sqrt(pow((_x[1] - _c[7]), 2))))) - (((_c[13] * (sqrt(pow(_x[0], 2)))) * _x[1]) * (sqrt(pow((_x[1] - _c[7]), 2))))) + (((_c[6] * (sqrt(pow(_x[0], 2)))) * (sqrt(pow(((_c[11] * powi(_x[0], _c[0])) - _c[2]), 2)))) * (sqrt(pow((_x[1] - _c[7]), 2))))) + ((_c[12] * (sqrt(pow(_x[0], 2)))) * (sqrt(pow((_x[1] - _c[7]), 2))))) / ((((_c[6] * powi(_x[0], _c[0])) * (sqrt(pow(_x[0], 2)))) * powi((_x[1] - _c[7]), _c[0])) * (sqrt(pow((_x[1] - _c[7]), 2))))), 2)))
}
